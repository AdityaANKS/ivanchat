name: Test Suite

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16, 18, 20]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npm ci --prefix server
          npm ci --prefix client
      
      - name: Run tests
        run: |
          npm test --prefix server
          npm test --prefix client

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npm ci --prefix server
      
      - name: Run integration tests
        env:
          MONGODB_URI: mongodb://localhost:27017/ivan_test
          REDIS_HOST: localhost
        run: |
          npm run test:integration --prefix server

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          npm ci --prefix client
          npx playwright install
      
      - name: Start services
        run: |
          docker-compose -f docker-compose.test.yml up -d
          npm run dev:server &
          npm run dev:client &
          npx wait-on http://localhost:3000
      
      - name: Run E2E tests
        run: |
          npm run test:e2e --prefix client
      
      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-artifacts
          path: |
            client/test-results/
            client/playwright-report/