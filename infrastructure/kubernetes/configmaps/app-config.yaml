# infrastructure/kubernetes/configmaps/app-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ivanchat-config
  namespace: ivanchat
data:
  # API URLs
  api-url: "https://api.ivanchat.com"
  socket-url: "wss://ws.ivanchat.com"
  cdn-url: "https://cdn.ivanchat.com"
  client-url: "https://ivanchat.com"
  
  # AWS Configuration
  aws-region: "us-east-1"
  s3-bucket: "ivanchat-uploads"
  s3-cdn-bucket: "ivanchat-static"
  
  # Database Configuration
  mongodb-database: "ivanchat"
  mongodb-pool-size: "20"
  redis-db: "0"
  
  # OAuth Configuration
  google-client-id: "YOUR_GOOGLE_CLIENT_ID"
  github-client-id: "YOUR_GITHUB_CLIENT_ID"
  discord-client-id: "YOUR_DISCORD_CLIENT_ID"
  
  # Payment Configuration
  stripe-publishable-key: "pk_live_YOUR_STRIPE_KEY"
  paypal-client-id: "YOUR_PAYPAL_CLIENT_ID"
  
  # Analytics Configuration
  google-analytics-id: "G-XXXXXXXXXX"
  mixpanel-token: "YOUR_MIXPANEL_TOKEN"
  sentry-dsn: "https://YOUR_KEY@sentry.io/YOUR_PROJECT"
  
  # Feature Flags
  features: |
    {
      "voiceChat": true,
      "videoChat": true,
      "screenSharing": true,
      "e2eEncryption": true,
      "messageTranslation": true,
      "aiModeration": true,
      "gamification": true,
      "marketplace": true,
      "webhooks": true,
      "bots": true
    }
  
  # Rate Limiting
  rate-limits: |
    {
      "message": {
        "windowMs": 5000,
        "max": 5
      },
      "api": {
        "windowMs": 60000,
        "max": 100
      },
      "auth": {
        "windowMs": 300000,
        "max": 5
      }
    }
  
  # Server Configuration
  max-file-size: "100MB"
  max-message-length: "4000"
  max-channels-per-server: "500"
  max-roles-per-server: "250"
  max-emojis-per-server: "250"
  max-members-per-server: "250000"
  
  # Cache Configuration
  cache-ttl-default: "3600"
  cache-ttl-user: "300"
  cache-ttl-message: "86400"
  cache-ttl-channel: "3600"
  cache-ttl-server: "3600"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ivanchat-nginx-config
  namespace: ivanchat
data:
  default.conf: |
    server {
        listen 3000;
        server_name _;
        
        root /usr/share/nginx/html;
        index index.html;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:;" always;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # React app routing
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }