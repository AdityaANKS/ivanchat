# infrastructure/kubernetes/deployments/backend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ivanchat-backend
  namespace: ivanchat
  labels:
    app: ivanchat-backend
    component: backend
    version: v1.0.0
spec:
  replicas: 3
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ivanchat-backend
      component: backend
  template:
    metadata:
      labels:
        app: ivanchat-backend
        component: backend
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ivanchat-backend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: backend
        image: ivanchat/backend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        - name: websocket
          containerPort: 5001
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "5000"
        - name: WS_PORT
          value: "5001"
        - name: LOG_LEVEL
          value: "info"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: ivanchat-secrets
              key: mongodb-uri
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: ivanchat-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ivanchat-secrets
              key: jwt-secret
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: ivanchat-secrets
              key: encryption-key
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: ivanchat-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: ivanchat-secrets
              key: aws-secret-access-key
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: ivanchat-config
              key: s3-bucket
        - name: CLIENT_URL
          valueFrom:
            configMapKeyRef:
              name: ivanchat-config
              key: client-url
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: ivanchat-oauth
              key: google-client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: ivanchat-oauth
              key: google-client-secret
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ivanchat-payment
              key: stripe-secret-key
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: temp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      initContainers:
      - name: wait-for-db
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z ivanchat-mongodb 27017; do echo waiting for mongodb; sleep 2; done']
      - name: wait-for-redis
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z ivanchat-redis 6379; do echo waiting for redis; sleep 2; done']
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: ivanchat-uploads-pvc
      - name: temp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ivanchat-backend
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "spot"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: ivanchat-backend
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ivanchat-backend-hpa
  namespace: ivanchat
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ivanchat-backend
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "1000"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ivanchat-backend-pdb
  namespace: ivanchat
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: ivanchat-backend